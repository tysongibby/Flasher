// <auto-generated />
using System;
using FlasherData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlasherData.Migrations
{
    [DbContext(typeof(FlasherContext))]
    partial class FlasherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("FlasherData.DataModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Category1",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Category2",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Category3",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Category4",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Category5",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Category6",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Category7",
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "Category8",
                            SubjectId = 2
                        });
                });

            modelBuilder.Entity("FlasherData.DataModels.Flashcard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AnsweredCorrectly")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Back")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Front")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Flashcards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnsweredCorrectly = false,
                            Back = "Back1",
                            CategoryId = 1,
                            Front = "Front1",
                            Name = "Flashcard1",
                            Number = 0
                        },
                        new
                        {
                            Id = 2,
                            AnsweredCorrectly = false,
                            Back = "Back2",
                            CategoryId = 1,
                            Front = "Front2",
                            Name = "Flashcard2",
                            Number = 0
                        },
                        new
                        {
                            Id = 3,
                            AnsweredCorrectly = false,
                            Back = "Back3",
                            CategoryId = 2,
                            Front = "Front3",
                            Name = "Flashcard3",
                            Number = 0
                        },
                        new
                        {
                            Id = 4,
                            AnsweredCorrectly = false,
                            Back = "Back4",
                            CategoryId = 2,
                            Front = "Front4",
                            Name = "Flashcard4",
                            Number = 0
                        },
                        new
                        {
                            Id = 5,
                            AnsweredCorrectly = false,
                            Back = "Back5",
                            CategoryId = 3,
                            Front = "Front5",
                            Name = "Flashcard5",
                            Number = 0
                        },
                        new
                        {
                            Id = 6,
                            AnsweredCorrectly = false,
                            Back = "Back6",
                            CategoryId = 3,
                            Front = "Front5",
                            Name = "Flashcard6",
                            Number = 0
                        },
                        new
                        {
                            Id = 7,
                            AnsweredCorrectly = false,
                            Back = "Back7",
                            CategoryId = 4,
                            Front = "Front7",
                            Name = "Flashcard7",
                            Number = 0
                        },
                        new
                        {
                            Id = 8,
                            AnsweredCorrectly = false,
                            Back = "Back8",
                            CategoryId = 4,
                            Front = "Front8",
                            Name = "Flashcard8",
                            Number = 0
                        });
                });

            modelBuilder.Entity("FlasherData.DataModels.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AnsweredCorrectly")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlashcardId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Test")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("FlasherData.DataModels.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Subject1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Subject2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Subject3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Subject4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Subject5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Subject6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Subject7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Subject8"
                        });
                });

            modelBuilder.Entity("FlasherData.DataModels.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Subjects")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Subjects");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("FlasherData.DataModels.Category", b =>
                {
                    b.HasOne("FlasherData.DataModels.Subject", null)
                        .WithMany("Categories")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlasherData.DataModels.Flashcard", b =>
                {
                    b.HasOne("FlasherData.DataModels.Category", null)
                        .WithMany("Flashcards")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlasherData.DataModels.Question", b =>
                {
                    b.HasOne("FlasherData.DataModels.Test", null)
                        .WithMany("Questions")
                        .HasForeignKey("TestId");
                });

            modelBuilder.Entity("FlasherData.DataModels.Test", b =>
                {
                    b.HasOne("FlasherData.DataModels.Subject", "Subject")
                        .WithMany("Tests")
                        .HasForeignKey("Subjects")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("FlasherData.DataModels.Category", b =>
                {
                    b.Navigation("Flashcards");
                });

            modelBuilder.Entity("FlasherData.DataModels.Subject", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Tests");
                });

            modelBuilder.Entity("FlasherData.DataModels.Test", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
